{"version":3,"sources":["components/Header.js","helpers.js","components/Form.js","components/Resume.js","components/Result.js","components/Spinner.js","App.js","index.js"],"names":["HeaderWrapper","styled","header","HeaderTitle","h1","Header","title","capitaliceLetter","str","charAt","toUpperCase","slice","Field","div","Label","label","Select","select","InputRadio","input","SubmitButton","button","Error","Form","setResume","setLoading","useState","brand","year","plan","data","saveData","error","saveError","getFormValue","e","target","name","value","onSubmit","preventDefault","trim","result","diffYear","Date","getFullYear","getDifYear","increment","totalToPay","increasePlan","getPlan","parseFloat","toFixed","setTimeout","quote","Number","onChange","type","id","checked","htmlFor","WrapperResume","Resume","Message","p","QuoteResult","TextQuote","Result","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Wrapper","FormWrapper","App","resume","loading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.831be204.chunk.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nconst HeaderWrapper = styled.header`\n  background-color: #26C6DA;\n  padding: 10px;\n  font-weight: 900;\n  color: #ffff;\n`;\n\nconst HeaderTitle = styled.h1`\n  font-size: 2rem;\n  margin: 0;\n  font-family: 'Slabo 27px', serif;\n  text-align: center;\n`;\n\nconst Header = ({title}) => {\n  return (\n    <HeaderWrapper>\n      <HeaderTitle>{title}</HeaderTitle>\n    </HeaderWrapper>\n  )\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default Header\n","// calculate difference between years\nexport function getDifYear (year) {\n  return new Date().getFullYear() - year\n}\n\n// calculate total to pay based on brand\nexport function totalToPay (brand) {\n  let increment\n\n  switch (brand) {\n    case 'european':\n      increment = 1.30\n      break;\n\n    case 'american':\n      increment = 1.15\n      break;\n\n    case 'asian':\n      increment = 1.05\n      break;\n\n    default:\n      break;\n  }\n\n  return increment\n\n}\n\n// calculate type of insurance\nexport function getPlan (plan) {\n  return (plan === 'basic') ? 1.20 : 1.50\n}\n\nexport function capitaliceLetter (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}","import React, {useState} from 'react'\nimport styled from '@emotion/styled'\nimport {getDifYear, getPlan, totalToPay} from '../helpers'\nimport PropTypes from 'prop-types'\n\nconst Field = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: 1rem;\n`\n\nconst Label = styled.label`\n  flex: 0 0 100px;\n`\n\nconst Select = styled.select`\n display: block;\n width: 100%;\n padding: 1rem;\n border: 1px solid #e1e1e1;\n -webkit-appearance: none;\n`\n\nconst InputRadio = styled.input`\n  margin: 0 1rem;\n`\n\nconst SubmitButton = styled.button`\n  background-color: #00838F;\n  font-size: 16px;\n  font-weight: 900;\n  width: 100%;\n  padding: 1rem;\n  color: #fff;\n  border: none;\n  text-transform: uppercase;\n  -webkit-appearance: none;\n  cursor: pointer;\n  transition: all linea 0.25s;\n  margin-top: 1rem;\n\n  &:hover {\n    background-color: #26C6DA;\n    transition: all linea 0.25s;\n  }\n`\n\nconst Error = styled.div`\n  background-color: red;\n  color: white;\n  padding: 1rem;\n  width:100%;\n  text-align: center;\n  margin-bottom: 2rem;\n`\n\nconst Form = ({setResume, setLoading}) => {\n\n  const [data, saveData] = useState({\n    brand: '',\n    year: '',\n    plan: ''\n  })\n\n  const [error, saveError] = useState(false)\n\n  const {brand, year, plan} = data\n\n  const getFormValue = (e) => {\n    saveData({\n      ...data,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (brand.trim() === '' || plan.trim() === '' || year.trim() === '') {\n      saveError(true)\n      return\n    }\n    saveError(false)\n    // base 2000\n    let result = 2000\n    // get difference between years\n    const diffYear = getDifYear(year)\n    // each year rest 3%\n    result -= ((diffYear * 3) * result) / 100\n    // calculate increment based on brand\n    result = totalToPay(brand) * result\n    // Basic plan increase 20%\n    const increasePlan = getPlan(plan)\n    // Total price\n    result = parseFloat(increasePlan * result).toFixed(2)\n    setLoading(true)\n    setTimeout(() => {\n      setLoading(false)\n      setResume({\n        quote: Number(result),\n        data\n      })\n    }, 2000)\n  }\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n    >\n\n      {error ? <Error>All fields are required</Error> : null}\n\n      <Field>\n        <Label>Brand</Label>\n        <Select\n          name=\"brand\"\n          value={brand}\n          onChange={getFormValue}\n        >\n          <option value=\"\"> - Select brand -</option>\n          <option value=\"american\">American</option>\n          <option value=\"european\">European</option>\n          <option value=\"asian\">Asian</option>\n        </Select>\n      </Field>\n\n      <Field>\n        <Label>Year</Label>\n        <Select\n          name=\"year\"\n          value={year}\n          onChange={getFormValue}\n        >\n          <option value=\"\">-- Select year --</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"2018\">2018</option>\n          <option value=\"2017\">2017</option>\n          <option value=\"2016\">2016</option>\n          <option value=\"2015\">2015</option>\n          <option value=\"2014\">2014</option>\n          <option value=\"2013\">2013</option>\n          <option value=\"2012\">2012</option>\n        </Select>\n      </Field>\n\n      <Field>\n        <Label>Plan</Label>\n        <InputRadio\n          type=\"radio\"\n          name=\"plan\"\n          value=\"basic\"\n          id=\"basic\"\n          checked={plan === 'basic'}\n          onChange={getFormValue}\n        />\n        <label htmlFor=\"basic\">Basic</label>\n\n        <InputRadio\n          type=\"radio\"\n          name=\"plan\"\n          value=\"full\"\n          id=\"full\"\n          checked={plan === 'full'}\n          onChange={getFormValue}\n        />\n        <label htmlFor=\"full\">Full</label>\n      </Field>\n\n      <SubmitButton\n        type=\"submit\"\n      >\n        Quote\n      </SubmitButton>\n    </form>\n  )\n}\n\nForm.propTypes = {\n  setResume: PropTypes.func.isRequired,\n  setLoading: PropTypes.func.isRequired\n}\n\nexport default Form\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport {capitaliceLetter} from '../helpers'\nimport PropTypes from 'prop-types'\n\nconst WrapperResume = styled.div`\n  padding: 1rem;\n  text-align: center;\n  background-color: #00838f;\n  color: #fff;\n  margin-top: 1rem;\n`\n\nconst Resume = ({data}) => {\n  // get data\n  const {brand, year, plan} = data\n\n  if (brand.trim() === '' || plan.trim() === '' || year.trim() === '') {\n    return null\n  }\n\n  return (\n    <WrapperResume>\n      <h2>Resume quote</h2>\n      <ul>\n        <li>Brand: {capitaliceLetter(brand)}</li>\n        <li>Plan: {capitaliceLetter(plan)}</li>\n        <li>Year of the car: {capitaliceLetter(year)}</li>\n      </ul>\n    </WrapperResume>\n  )\n}\n\nResume.propTypes = {\n  data: PropTypes.object.isRequired\n}\n\nexport default Resume\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\nimport PropTypes from 'prop-types'\n\nconst Message = styled.p`\n  background-color: rgb(127, 224, 237);\n  margin-top: 2rem;\n  padding: 1rem;\n  text-align: center;\n`\n\nconst QuoteResult = styled.div`\n  text-align: center;\n  padding: 0.5rem;\n  border: 1px solid #26C6DA;\n  background-color: rgb(127, 224, 237);\n  margin-top: 1rem;\n  position: relative;\n`\n\nconst TextQuote = styled.div`\n  color: #00838f;\n  padding: 1rem;\n  text-transform: uppercase;\n  font-weight: 900;\n  margin: 0;\n`\n\nconst Result = ({quote}) => {\n  return (\n    (quote === 0)\n      ? <Message>Choose brand, year and plan</Message>\n      :\n      (\n        <QuoteResult>\n          <TransitionGroup\n            component=\"span\"\n            className=\"resultado\"\n          >\n            <CSSTransition\n              classNames=\"resultado\"\n              key={quote}\n              timeout={{enter: 500, exit: 500}}\n            >\n              <TextQuote>Total amount: <span>${quote}</span></TextQuote>\n            </CSSTransition>\n          </TransitionGroup>\n        </QuoteResult >\n      )\n  )\n}\n\nResult.propTypes = {\n  quote: PropTypes.number.isRequired\n}\n\nexport default Result\n","import React from 'react'\nimport './Spinner.css'\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\"></div>\n  )\n}\n\nexport default Spinner\n","import Header from './components/Header';\nimport styled from '@emotion/styled'\nimport Form from './components/Form';\nimport {useState} from 'react';\nimport Resume from './components/Resume';\nimport Result from './components/Result';\nimport Spinner from './components/Spinner';\n\nconst Wrapper = styled.div`\n  max-width:600px;\n  margin: 0 auto;\n  margin-top: 4rem;\n`;\n\nconst FormWrapper = styled.div`\n  background-color: #fff;\n  padding:3rem;\n`;\n\nfunction App () {\n\n  const [resume, setResume] = useState({\n    quote: 0,\n    data: {\n      brand: '',\n      year: '',\n      plan: ''\n    }\n  })\n\n  const [loading, setLoading] = useState(false)\n\n  // extract data\n  const {quote, data} = resume\n\n  return (\n    <Wrapper>\n      <Header\n        title='Car insurance quotes'\n      />\n      <FormWrapper>\n        <Form\n          setResume={setResume}\n          setLoading={setLoading}\n        />\n\n        {loading ? <Spinner /> : null}\n\n        <Resume\n          data={data}\n        />\n\n        {!loading ? <Result quote={quote} /> : null}\n\n      </FormWrapper>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}